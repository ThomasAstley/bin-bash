# Custom

> vim
> 

- command mode
^r^w                 #insert current word in command mode
:help i_CTRL-X_CTRL- # complete path

- insert mode commands
^t and ^d, << and >>  # indent/outdent
J or J ', ' 4         # join
^wx                   # swap windows
^w=                   # equalize
^ws                   # split
^wv                   # vertical split
gP                    # paste before leave cursor at end
D == d$               #
c-r=                  # calculator in insert mode
^-r "                 # paste in the command line

- multipane window
vim -c 'windo set scrollbind nomodifiable' -O all* <(seq 5)

- diff two buffers
buffdo diffthis

- new buffer in a vertical split
vnew

- execute macro in all buffers and save
:bufdo execute "normal! @q" | w

- advance line before executing macro
:.,+10norm @q

-  hide all non matching
/search
setlocal foldexpr=getline(v:lnum)=~@/?0:1 foldmethod=expr

- folding 
zR    # open all
zM    # close all
zE    # delete all folds
zd    # delete current fold
zk/j  # previous/next fold
:Fw   # foldsearch


- vim diff
do    # Get changes from other window into the current window.
dp    # Put the changes from current window into the other window.
]c    # Jump to the next change.
[c    # Jump to the previous change.

- windows 
Ctrl-w + H, J, K or L     # move window
^E hjkl                   # resize windows
:vnew term://bash         # terminal split
:vsplit term://bash#mru   #terminal split

-  help objects
:help text-objects

-  divers commands
vip<C-V>$A,<Esc> select paragraph, got to visual block mode, end of line insert ','

ca{	# Change inside the curly braces (try [, (, etc.)
da"	# Delete the next double-quoted string
dap	# Delete the whole paragraph
ea	# Append to the end of the current word
gg=G	# Reindent the whole file
g,	# Jump back forward through the change list
g;	# Jump to the last change you made
g_	# Move the last non-blank character of the line (but you remove trailing whitespace, right)
g&	# Repeat last substitution on all lines
`<	# Jump to beginning of last visual selection
`[	# Jump to beginning of last yanked text
`>	# Jump to end of last visual selection
`]	# Jump to end of last yanked text
+	# Move to the first non-whitespace character of the next line
>>	# Indent current line
<<	# Outdent current line
&	# Repeat last substitution on current line
yapP	# Duplicate the current paragraph
zg	# Add to spelling dictionary
z=	# Show spelling corrections
zw	# Remove from spelling dictionary

- strip trailing spaces
:%s/\s\+$//e

- fill quickfix
:cexpr system('java ' . shellescape(expand('%:r')))

- replace selection by program output, passing the selection in stdin
vnoremap qq c<C-R>=system('perl -e "\$a=<STDIN> ; printf qq~%0.2f~, \$a/256,  "', @")<CR><ESC>

-  paragraph start/end
Go to the start of the first word of a paragraph: {w
Go to the end of the last word of a paragraph: }ge

- change two split windows 
Ctrl-w t Ctrl-w K  # vertical to horizonal
Ctrl-w t Ctrl-w H  # horizontal to vertical

nmap <leader>th <C-w>t<C-w>H and nmap <leader>tk <C-w>t<C-w>K â€“ 

-  display ^M
:set ffs=unix
:e +ffs=unix # current file only

-  open file under cusrsor
gf - Edit existing file under cursor in same window
C-Wf - Edit existing file under cursor in split window
C-WC-F - Edit existing file under cursor in vertically split window
C-Wgf - Edit existing file under cursor in new tabpage# open file, undeer cursor, in new tab ^wgt

- get current colors
This command will open a new window containing all highlight group names, displayed in their own colour:
:so $VIMRUNTIME/syntax/hitest.vim

- vertical split and change split
vsplit, ^w

- insensitive_search
/\csearch

- completion
^X
	n  name
	l line
	f file name
	k word from dico
	t thesaurus

