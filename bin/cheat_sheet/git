# Custom git

> custom git pages
> 

- checkout branch from other repo

git remote add {{remote_name}} https://github.com/{{author}}/{{project}}
git fetch      {{remote_name}} 
git co         {{remote_name}}/{{branch}} -b {{local_branch}}


- find when a file was added

git log --follow --diff-filter=A --find-renames=40% {{path}}


- interactive cherry-pick

git cherry-pick -n {{commit}} # get patch, don't commit [-n]
git reset                     # unstage commit changes
git add -p                    # interactive add
git commit                    # commit


- create repo on github

gh auth login
gh repo create {{new_repo_name}} --public --source=. --remote=origin --push


- checkout old commit in directory

git --work-tree=./old checkout {{commit}} -- .


- delete remote branch

git push   -d {{remote_name}} {{branch_name}}
git branch -d                 {{branch_name}}


- split commmit into multiple commit

git rebase -i {{commit}}
git reset HEAD~
git commit # for each new commit
git rebase --continue


- force color (diff, show, log, grep)

git -c color.status=always {{command}}


- move main:HEAD to current HEAD, if fast-forward

git fetch . HEAD:main

-show log for specific line

git log -L150,+1:'ftl'


-Remove file from the repository but keep it locally

git rm --cached -r somedir
git rm --cached somefile.ext


- is branch merged to main?

git branch --merged main
git branch --no-merged main

- diff fancy with search

gd --color | diff-so-fancy | /usr/bin/less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '


- log with files listed

git log --name-status

- divers

git whatchanged                         # for end used
git diff-tree --name-only               # for scripts
git show --name-status {{commit}}       #
git log --since="3 days ago" [{{file}}] #

https://github.com/iamerikjolson/GitHub-Issues-Process

- divers remotes and branches

git branch -v or -vv
git ls-remote
git for-each-ref
git remote -v
git branch --track name origin/name
git remote show origin

