#! /bin/bash

# type -a $1 is a good replacement for this copious amount of bash code!
#whichever () { [[ -n $1 ]] && ( function_which $1 || alias $1 2> /dev/null || is_bash_internal $1 || (a=$(which $1) && ls "$(which $a)") ) ; }

alias_which() {

alias_definition=$(alias $1 2>/dev/null)

if [[ -n "$alias_definition" ]] ; then
	own_definitions=$(ack -1 --nogroup --no-color --output="ðŸš²\$\`\$&\$'" "alias $1=" ~/nadim/config ~/nadim/bin | perl -pe 's/(.*:)ðŸš²/$1 =~tr[:][ ]r/ge')
	found_current=$(printf "$own_definitions" | grep "$alias_definition")

	if [[ -z "$found_current" ]] ; then
		[[ -n "$own_definitions" ]] && printf "$own_definitions\n"
		printf "${YELLOW}current: ${alias_definition}${RESET}\n"
	else
		[[ -n "$own_definitions" ]] && printf "$own_definitions\n"
	fi
	
	return 0
else
	return 1
fi

}

is_bash_internal() { help -d $1 2> /dev/null ; }

what=$1
and_or='||'
[[ -n $what ]] && [[ $what == '-a' ]] && and_or=';' && what=$2

if [[ -n $what ]] ; then 
	cmd="alias_which $what $and_or function_which $what 2> /dev/null $and_or is_bash_internal $what $and_or (a=\$(which $what) && ls -gGh  \$(which $what))"  
	eval "$cmd"
fi


