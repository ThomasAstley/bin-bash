# divers vim related
fugitive: %Gllog, select, Gdiff
fugitive: Git log --patch -- filename
git log --oneline --follow -- documentation/mdbook_asciio/src/stencils/asciio_shapes.md
lsdiff -n the_whole_diff --strip 1 | perl -ane '$F[0] <= 168 and $file=$F[1] or { print "$file" and exit}'
topleft vertical diffsplit old_version of file

# force color
status:    git -c color.status=always status | less -REX
diff, show, log and grep : git -c color.ui=always diff, or git diff --color=always

# move master's HEAD to current HEAD, if fast-forward
git fetch . HEAD:master

# find when a file was added
git log --follow --diff-filter=A --find-renames=40% path_finder


# checkout branch from other repo
git remote add quin https://github.com/qindapao/P5-App-Asciio
git fetch quin 
git co quin/cross_overlay -b quin_overlay


#github fluff
https://github.com/iamerikjolson/GitHub-Issues-Process

# delete remote branch

git push -d <remote_name> <branchname>
git branch -d <branchname>

#create repo on github from current local repo
gh auth login
gh repo create my-newrepo --public --source=. --remote=origin --push

# checkout old commit in directory
git --work-tree=./old checkout 38023b9 -- .

#show log for specific line
git log -L150,+1:'ftl'

# split commmit in multiple commit

git rebase -i 123abcd~ or gsh 

mark commit as "edit", save

git reset HEAD~

Commit the pieces individually

git rebase --continue

#Remove file from the repository but keep it locally
git rm --cached -r somedir
git rm --cached somefile.ext

# is branch merged
git branch --merged master
git branch --no-merged master

# create repo on github
hub create -d "A tmux side-pane manager"

#diff fancy
gd --color | diff-so-fancy | /usr/bin/less --tabs=4 -RFX --pattern '^(Date|added|deleted|modified): '


-u shows the contents of directories not yet added to the repo ... gs -u

#preview a merge
gmeldd other
git log --name-status --pretty=format:'%C(yellow)%h%Creset %C(white bold)%s%Creset%C(blue bold)%d%Creset %C(black bold)(%ar, %an)%Creset'  other..
git diff --name-status otherbranch
gitk otherbranch


# remotes and branches
git branch -v or -vv
git ls-remote
git for-each-ref
git remote -v
git branch --track name origin/name
git remote show origin


# committing too much
command: git commit a b X
error: X is not part of that commit
fix: git reset HEAD^ X; git commit --amend; 

git reflog


# log with files listed
git log --name-status


# diff with meld
meld <(git show HEAD:$1) $1


"git whatchanged" for end used; "git diff-tree --name-only" for scripts
git show --name-status <commit>

git log --since="3 days ago" [file]


# adding a github remote
    $ git remote add origin git@github.com:username/Hello-World.git
    $ git push origin master
    
#display which branches need to be merged in our current branch
git branch --merged --no-merged

opend editor for config: git config --global -e

# partly cherry-pick
git cherry-pick -n <commit> # get your patch, but don't commit (-n = --no-commit)
git reset                   # unstage the changes from the cherry-picked commit
git add -p                  # make all your choices (add the changes you do want)
git commit                  # make the commit!

